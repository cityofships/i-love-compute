commit e08fcae02fcd946dcb687c53fd104ec8e8b28035
Author: Thomas Debesse <dev@illwieckz.net>
Date:   Sat Oct 22 09:14:22 2022 +0200

    patch: luxmark3/luxmark3-luxcore-use-simde-on-non-i686.patch

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9c668e1f3..571ecbb6d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -108,7 +108,10 @@ if (LUXRAYS_DISABLE_OPENCL)
 endif()
 
 if(NOT WIN32 AND NOT APPLE)
-	ADD_DEFINITIONS(-msse2 -mfpmath=sse -ftree-vectorize -funroll-loops -Wall -fPIC -DHAVE_PTHREAD_H)
+	ADD_DEFINITIONS(-ftree-vectorize -funroll-loops -Wall -fPIC -DHAVE_PTHREAD_H)
+	if(USE_SSE)
+		ADD_DEFINITIONS(-msse2 -mfpmath=sse)
+	endif()
 endif()
 
 ################################################################################
diff --git a/cmake/PlatformSpecific.cmake b/cmake/PlatformSpecific.cmake
index 50d0e067f..f05f21503 100644
--- a/cmake/PlatformSpecific.cmake
+++ b/cmake/PlatformSpecific.cmake
@@ -16,6 +16,11 @@
 # limitations under the License.
 ################################################################################
 
+set(USE_SSE ON CACHE STRING "Use SSE intrinsics")
+if(USE_SSE)
+    add_definitions(-DLUXCORE_USE_SSE=1)
+endif()
+
 # Use relative paths
 # This is mostly to reduce path size for command-line limits on windows
 if(WIN32)
@@ -24,7 +29,6 @@ if(WIN32)
   set(CMAKE_SUPPRESS_REGENERATION true)
 endif(WIN32)
 
-
 ###########################################################################
 #
 # Compiler Flags
@@ -141,7 +145,9 @@ ENDIF(MSVC)
 IF(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
   # Update if necessary
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-long-long -pedantic")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse -msse2 -msse3 -mssse3")
+  if(USE_SSE)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse -msse2 -msse3 -mssse3")
+  endif()
   IF(NOT CYGWIN)
 	  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
   ENDIF(NOT CYGWIN)
@@ -228,7 +234,10 @@ IF(APPLE)
 	endif()
 	#### OSX-flags by jensverwiebe
 	ADD_DEFINITIONS(-Wall -DHAVE_PTHREAD_H -fvisibility=hidden -fvisibility-inlines-hidden) # global compile definitions
-	set(OSX_FLAGS_RELEASE "-ftree-vectorize -msse -msse2 -msse3 -mssse3") # only additional flags
+	set(OSX_FLAGS_RELEASE "-ftree-vectorize") # only additional flags
+	if(USE_SSE)
+		set(OSX_FLAGS_RELEASE "$[OSX_FLAGS_RELEASE} -msse -msse2 -msse3 -mssse3")
+	endif()
 	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} ${OSX_FLAGS_RELEASE}") # cmake emits "-O3 -DNDEBUG" for Release by default, "-O0 -g" for Debug
 	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${OSX_FLAGS_RELEASE}")
 	set(CMAKE_EXE_LINKER_FLAGS "-Wl,-unexported_symbols_list -Wl,${CMAKE_SOURCE_DIR}/include/luxrays/utils/unexported_symbols.map")
diff --git a/include/luxrays/accelerators/mqbvhaccel.h b/include/luxrays/accelerators/mqbvhaccel.h
index b68249dcd..c9d39229b 100644
--- a/include/luxrays/accelerators/mqbvhaccel.h
+++ b/include/luxrays/accelerators/mqbvhaccel.h
@@ -19,7 +19,14 @@
 #ifndef _LUXRAYS_MQBVHACCEL_H
 #define	_LUXRAYS_MQBVHACCEL_H
 
+#ifdef LUXCORE_USE_SSE
 #include <xmmintrin.h>
+#else
+#define SIMDE_ENABLE_NATIVE_ALIASES 1
+#include <simde/x86/mmx.h>
+#include <simde/x86/sse.h>
+#include <simde/x86/sse2.h>
+#endif
 
 #include "luxrays/luxrays.h"
 #include "luxrays/core/accelerator.h"
diff --git a/include/luxrays/accelerators/qbvhaccel.h b/include/luxrays/accelerators/qbvhaccel.h
index 5e13689af..3dced3d86 100644
--- a/include/luxrays/accelerators/qbvhaccel.h
+++ b/include/luxrays/accelerators/qbvhaccel.h
@@ -19,7 +19,14 @@
 #ifndef _LUXRAYS_QBVHACCEL_H
 #define	_LUXRAYS_QBVHACCEL_H
 
+#ifdef LUXCORE_USE_SSE
 #include <xmmintrin.h>
+#else
+#define SIMDE_ENABLE_NATIVE_ALIASES 1
+#include <simde/x86/mmx.h>
+#include <simde/x86/sse.h>
+#include <simde/x86/sse2.h>
+#endif
 
 #include "luxrays/luxrays.h"
 #include "luxrays/core/accelerator.h"
