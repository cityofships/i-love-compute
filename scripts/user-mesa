#! /usr/bin/env bash
# SPDX-License-Identifier: MIT
# Copyright 2022 Thomas “illwieckz“ Debesse

# You may need to install:
# clang python3-setuptools python3-mako cmake meson doxygen libexpat1-dev libxml2-dev xsltproc xmlto libvulkan-dev libelf-dev byacc bison flex libxcb-glx0-dev libxcb-shm0-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxshmfence-dev libvdpau-dev libva-dev glslang-tools

script_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
script_name="$(basename "$(realpath "${BASH_SOURCE[0]}")")"

. "${script_dir}/include.common.sh"

project_name='Mesa'
required_file='/etc/OpenCL/vendors/mesa.icd'
help_preset='featured_platform'
build_preset='featured_project'
provides_opencl='true'
provides_vulkan='true'
provides_opengl='true'
provides_egl='true'
builds_llvm='true'

known_feature_list='opencl,rusticl,vulkan,opengl,gles,nine,va,vdpau,xa,egl'
default_feature_list='opencl,rusticl,vulkan'
feature_opencl='false'
feature_rusticl='false'
feature_vulkan='false'
feature_opengl='false'
feature_gles='false'
feature_nine='false'
feature_va='false'
feature_vdpau='false'
feature_xa='false'
feature_egl='false'

packages=(
	# package name
	#	directory name
	#	repository url
	#	branch name
	#	build slug
	'Meson'
		'meson'
		'https://github.com/mesonbuild/meson.git'
		'-'
		'generic_python'
	'LLVM project'
		'llvm-project'
		'https://github.com/llvm/llvm-project.git'
		'-'
		'-'
	'LLVM'
		'llvm-project/llvm'
		'-'
		'-'
		'llvm'
	'SPIRV Headers'
		'SPIRV-Headers'
		'https://github.com/KhronosGroup/SPIRV-Headers.git'
		'-'
		'-'
	'SPIRV Tools'
		'SPIRV-Tools'
		'https://github.com/KhronosGroup/SPIRV-Tools.git'
		'-'
		'spirv_tools'
	'SPIRV LLVM Translator'
		'SPIRV-LLVM-Translator'
		'https://github.com/KhronosGroup/SPIRV-LLVM-Translator.git'
		'-'
		'-'
	'libclc'
		'llvm-project/libclc'
		'-'
		'-'
		'libclc'
	'Wayland'
		'wayland'
		'https://gitlab.freedesktop.org/wayland/wayland.git'
		'-'
		'generic_meson'
	'Wayland protocols'
		'wayland-protocols'
		'https://gitlab.freedesktop.org/wayland/wayland-protocols.git'
		'-'
		'generic_meson'
	'libpciaccess'
		'libpciaccess'
		'https://gitlab.freedesktop.org/xorg/lib/libpciaccess.git'
		'-'
		'generic_meson'
	'DRM'
		'drm'
		'https://gitlab.freedesktop.org/mesa/drm.git'
		'-'
		'generic_meson'
	'Mesa'
		'mesa'
		'https://gitlab.freedesktop.org/mesa/mesa.git'
		'-'
		'mesa'
)

_set_custom_env () {
	export CFLAGS='-fno-lto'
	export CXXFLAGS="${CFLAGS}"
	export LDFLAGS="${CFLAGS}"
}

_build_llvm () {
	local llvm_spirv_embedded_folder="${workspace_dir}/llvm-project/llvm/projects/SPIRV-LLVM-Translator"
	if ! [ -e "${llvm_spirv_embedded_folder}" ]
	then
		ln -s "${workspace_dir}/SPIRV-LLVM-Translator" \
			"${llvm_spirv_embedded_folder}"
	fi

	local spirv_headers_embedded_folder="${workspace_dir}/llvm-project/llvm/projects/SPIRV-LLVM-Translator/SPIRV-Headers"
	if ! [ -e "${spirv_headers_embedded_folder}" ]
	then
		ln -s "${workspace_dir}/SPIRV-Headers" \
			"${spirv_headers_embedded_folder}"
	fi

	# Use -D'LLVM_ENABLE_PROJECTS'='clang' or:
	# The dependency target "clang" of target "check-all" does not exist
	# The dependency target "clang" of target "check-llvm-spirv" does not exist.

	# Explicit build type is now mandatory,
	# See https://github.com/llvm/llvm-project/commit/350bdf9227cebceb7b7a283f90f504555bf6c496

	# RTTI is disabled by default by LLVM, but Clover requires it to be enabled:
	# > ERROR: Problem encountered: The Clover OpenCL state tracker requires rtti
	_cmake_setup \
		-D'LLVM_BUILD_TOOLS'='ON' \
		-D'LLVM_ENABLE_ASSERTIONS'='ON' \
		-D'LLVM_ENABLE_PROJECTS'='clang' \
		-D'LLVM_ENABLE_RTTI'='ON' \
		-D'LLVM_BUILD_RUNTIME'='OFF' \
		-D'LLVM_BUILD_RUNTIMES'='OFF' \
		-D'LLVM_BUILD_TESTS'='OFF' \
		-D'LLVM_BUILD_UTILS'='OFF' \
		-D'LLVM_ENABLE_PLUGINS'='OFF' \
 		-D'LLVM_INCLUDE_BENCHMARKS'='OFF' \
 		-D'LLVM_INCLUDE_DOCS'='OFF' \
 		-D'LLVM_INCLUDE_EXAMPLES'='OFF' \
 		-D'LLVM_INCLUDE_TESTS'='OFF' \
		-D'LLVM_INCLUDE_UTILS'='OFF' \
		-D'LLVM_SPIRV_INCLUDE_TESTS'='OFF' \
		-D'CLANG_ENABLE_ARCMT'='OFF' \
		-D'CLANG_ENABLE_STATIC_ANALYZER'='OFF' \
		-D'CLANG_TOOL_DICTIONARY_BUILD'='OFF' \
		-D'CLANG_TOOL_HANDLE_CXX_BUILD'='OFF' \
		-D'CLANG_TOOL_HANDLE_LLVM_BUILD'='OFF'

	_cmake_compile_install
}

_build_spirv_tools () {
	local spirv_headers_embedded_folder="${workspace_dir}/SPIRV-Tools/external/SPIRV-Headers"
	if ! [ -e "${spirv_headers_embedded_folder}" ]
	then
		ln -s "${workspace_dir}/SPIRV-Headers" \
			"${spirv_headers_embedded_folder}"
	fi

	_build_generic_cmake
}

_build_libclc () {
	_cmake_setup \
		-D'LIBCLC_TARGETS_TO_BUILD'='amdgcn--;r600--;spirv-mesa3d-;spirv64-mesa3d-'

	_cmake_compile_install
}

_build_mesa () {
	local mesa_egl='disabled'
	local mesa_gbm='disabled'
	local mesa_glx='disabled'
	local mesa_glx_direct='false'
	local mesa_gles1='disabled'
	local mesa_gles2='disabled'
	local mesa_glvnd='false'
	local mesa_opengl='false'
	local mesa_gallium_nine='false'
	local mesa_gallium_opencl='disabled'
	local mesa_gallium_rusticl='false'
	local mesa_gallium_va='disabled'
	local mesa_gallium_vdpau='disabled'
	local mesa_gallium_xa='disabled'
	local mesa_opencl_spirv='false'
	local mesa_gallium_drivers=''
	local mesa_vulkan_beta='false'
	local mesa_vulkan_drivers=''
	local mesa_vulkan_rt_drivers=''
	local mesa_intel_clc='disabled'
	local mesa_llvm='disabled'
	local mesa_shared_llvm='disabled'

	# Used by opengl, gles, and nine.
	local gallium_graphics_drivers='swrast,radeonsi,r300,r600,nouveau,i915,iris,zink,crocus'
	# Used by vulkan.
	local gallium_vulkan_drivers='swrast'
	# Used by opencl.
	local gallium_opencl_drivers='radeonsi,r600,nouveau,iris'
	local gallium_rusticl_drivers='swrast,radeonsi,nouveau,iris'

	local vulkan_drivers='swrast,amd,intel,intel_hasvk'

	# radv, radeonsi, opencl, clc
	mesa_llvm='enabled'
	mesa_shared_llvm='enabled'

	if "${feature_opencl}"
	then
		mesa_gallium_drivers+=",${gallium_opencl_drivers}"
		mesa_gallium_opencl='icd'
		mesa_opencl_spirv='true'
	fi

	if "${feature_rusticl}"
	then
		mesa_gallium_drivers+=",${gallium_rusticl_drivers}"
		mesa_gallium_rusticl='true'
		mesa_opencl_spirv='true'
	fi

	if "${feature_vulkan}"
	then
		# swrast vulkan requires swrast gallium
		mesa_gallium_drivers+=",${gallium_vulkan_drivers}"
		# mesa_vulkan_beta='true'
		mesa_vulkan_drivers="${vulkan_drivers}"
		mesa_vulkan_rt_drivers='auto'
		mesa_intel_clc='enabled'
	fi

	if "${feature_opengl}"
	then
		mesa_gallium_drivers+=",${gallium_graphics_drivers}"
		mesa_glvnd='true'
		mesa_opengl='true'
		mesa_glx='dri'
		mesa_glx_direct='true'
	fi

	if "${feature_gles}"
	then
		mesa_gallium_drivers+=",${gallium_graphics_drivers}"
		mesa_gles1='enabled'
		mesa_gles2='enabled'
	fi

	if "${feature_nine}"
	then
		mesa_gallium_drivers+=",${gallium_graphics_drivers}"
		mesa_gallium_nine='true'
	fi

	if "${feature_va}"
	then
		mesa_gallium_va='enabled'
	fi

	if "${feature_vdpau}"
	then
		mesa_gallium_vdpau='enabled'
	fi

	if "${feature_xa}"
	then
		mesa_gallium_xa='enabled'
	fi

	if "${feature_egl}"
	then
		mesa_egl='enabled'
		mesa_gbm='enabled'
		# EGL requires shared-glapi
		mesa_opengl='true'
	fi

	mesa_gallium_drivers="$(echo "${mesa_gallium_drivers//,/$'\n'}" | sort -u | grep -v -E '^$' || true)"
	mesa_gallium_drivers="${mesa_gallium_drivers//$'\n'/,}"
	mesa_gallium_drivers="${mesa_gallium_drivers:-[]}"

	mesa_vulkan_drivers="$(echo "${mesa_vulkan_drivers//,/$'\n'}" | sort -u | grep -v -E '^$' || true)"
	mesa_vulkan_drivers="${mesa_vulkan_drivers//$'\n'/,}"
	mesa_vulkan_drivers="${mesa_vulkan_drivers:-[]}"

	# Workaround lack of libudev linker flag.
	# https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/18761
	export CFLAGS+=" -ludev"
	export CXXFLAGS+=" -ludev"
	export LDFLAGS+=" -ludev"

	# Clover requires LLVM RTTI to be enabled.

	# rusticl requires shader-cache to be enabled.

	# See also:
	#  gallium-drivers: virgl
	#  vulkan-drivers: virtio-experimental
	#  egl-native-platform
	#  static-libclc
	#  shader-cache
	_meson_setup \
		-D'b_ndebug'='false' \
		-D'cpp_rtti'='true' \
		-D'rust_std'='2021' \
		-D'dri-drivers'='[]' \
		-D'dri3'='enabled' \
		-D'egl'="${mesa_egl}" \
		-D'gbm'="${mesa_gbm}" \
		-D'glx'="${mesa_glx}" \
		-D'glx-direct'="${mesa_glx_direct}" \
		-D'gallium-drivers'="${mesa_gallium_drivers}" \
		-D'gallium-nine'="${mesa_gallium_nine}" \
		-D'gallium-omx'='disabled' \
		-D'gallium-opencl'="${mesa_gallium_opencl}" \
		-D'gallium-rusticl'="${mesa_gallium_rusticl}" \
		-D'gallium-va'="${mesa_gallium_va}" \
		-D'gallium-vdpau'="${mesa_gallium_vdpau}" \
		-D'gallium-xa'="${mesa_gallium_xa}" \
		-D'opencl-spirv'="${mesa_opencl_spirv}" \
		-D'opengl'="${mesa_opengl}" \
		-D'glvnd'="${mesa_glvnd}" \
		-D'gles1'="${mesa_gles1}" \
		-D'gles2'="${mesa_gles2}" \
		-D'vulkan-drivers'="${mesa_vulkan_drivers}" \
		-D'vulkan-rt-drivers'="${mesa_vulkan_rt_drivers}" \
		-D'vulkan-beta'="${mesa_vulkan_beta}" \
		-D'intel-clc'="${mesa_intel_clc}" \
		-D'shader-cache'='true' \
		-D'platforms'='auto' \
		-D'llvm'="${mesa_llvm}" \
		-D'shared-llvm'="${mesa_shared_llvm}" \
		-D'lmsensors'='disabled'

	_meson_compile_install
}

_help_custom_build() {
	cat <<-EOF
	${tab}${script_name} build --enable='opengl,nine'
	EOF
}

_help_custom_run () {
	cat <<-EOF
	${tab}LP_CL=1 RUSTICL_DEVICE_TYPE=gpu ${script_name} run clinfo --list

	${tab}AMD_VULKAN_ICD=RADV ${script_name} run vulkaninfo --summary

	${tab}LIBGL_ALWAYS_SOFTWARE=true ${script_name} run glxinfo -B

	${tab}R600_DEBUG=nir ${script_name} run glxinfo -B
	EOF
}

_spawn "${@}"
